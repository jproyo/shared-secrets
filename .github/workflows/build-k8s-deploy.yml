name: Build K8S Manifest (Kustomize) and Push Deploy

on:
  workflow_call:
    inputs:
      manifest-file:
        required: true
        type: string
      manifest-folder:
        required: true
        type: string
      docker-image-names:
        required: true
        type: string
      overlays-folder:
        required: false
        type: string
        default: 'operations/kubernetes/overlays'

jobs:
  kustomize:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@v3
      - uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
      - uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: ${{ secrets.GKE_CLUSTER }}
          location: ${{ secrets.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT_ID }}
      - name: Current branch sha
        if: github.event_name != 'release'
        run: |
          echo "DOCKER_TAG_IMAGE=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_ENV
      - name: Current Tag
        if: github.event_name == 'release'
        run: |
          echo "DOCKER_TAG_IMAGE=${{  github.ref_name }}" >> $GITHUB_ENV

      - name: Set namespace to deploy if dev-stage
        if: github.event_name != 'release'
        run: |
          echo "NAMESPACE=dev" >> $GITHUB_ENV
      - name: Set namespace to deploy if prod
        if: github.event_name == 'release'
        run: |
          echo "NAMESPACE=prod" >> $GITHUB_ENV

      - name: Setup Kustomize
        uses: imranismail/setup-kustomize@v2

      - name: Kustomize Edit Image with tag ${{env.DOCKER_TAG_IMAGE}}
        run: |
          cd ${{inputs.overlays-folder}}/${{env.NAMESPACE}}
          for i in $(echo ${{inputs.docker-image-names}} | sed "s/,/ /g")
          do
              kustomize edit set image europe-west4-docker.pkg.dev/${{ secrets.GKE_PROJECT_ID}}/default/$i:${{env.DOCKER_TAG_IMAGE}}
          done

      - name: Kustomize Build and Deploy
        run: |
          mkdir -p kube-target
          kustomize build ${{inputs.overlays-folder}}/${{env.NAMESPACE}} -o kube-target/${{inputs.manifest-file}}
          kustomize apply -f kube-target/${{inputs.manifest-file}}


